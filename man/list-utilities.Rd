% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list.R
\name{list-utilities}
\alias{cons}
\alias{is.empty}
\alias{list-utilities}
\alias{make.list}
\alias{member}
\alias{nth}
\alias{reverse}
\title{List utilities}
\usage{
cons(...)

reverse(x)

nth(obj, n)

member(x, table)

is.empty(obj)

make.list(n, expr)
}
\arguments{
\item{...}{Arguments that \code{cons} should pass to \code{c()}.}

\item{x}{As in \code{\link{\%in\%}} or \code{\link{rev}}.}

\item{obj}{An object that is.empty should check the length of.}

\item{n}{The number of times \code{make.list} should replicate its expr
argument in building a list.}

\item{table}{As in \code{\link{\%in\%}}.}

\item{expr}{An object which \code{make.list} should replicate in building
a list.}
}
\value{
\code{make.list} returns the n-length list of replicated expr's. is.empty returns
TRUE if its argument is 0-length and FALSE otherwise.
}
\description{
These functions provide small list- or vector-processing utilities, and in
some cases are just aliases for functions in base R. In such cases, the
point of the alias is to make the function available under the standard
Scheme name.
}
\details{
\code{cons} is an alias for base R's \code{\link{c}}, \code{nth} is an alias
for \code{\link{[[}}, \code{member} is an alias for \code{\link{\%in\%}},
\code{reverse} is an alias for \code{\link{rev}} and \code{is.empty} returns
TRUE if and only if its argument is of length 0, returning FALSE otherwise.

\code{make.list} returns a list constructed by replicating its expr argument
n times. It is equivalent to \code{link{replicate}} with
\code{simplify=FALSE}.
}

