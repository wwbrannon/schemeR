% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list.R
\name{list-access}
\alias{caaaar}
\alias{caaadr}
\alias{caaar}
\alias{caadar}
\alias{caaddr}
\alias{caadr}
\alias{caar}
\alias{cadaar}
\alias{cadadr}
\alias{cadar}
\alias{caddar}
\alias{cadddr}
\alias{caddr}
\alias{cadr}
\alias{car}
\alias{cdaaar}
\alias{cdaadr}
\alias{cdaar}
\alias{cdadar}
\alias{cdaddr}
\alias{cdadr}
\alias{cdar}
\alias{cddaar}
\alias{cddadr}
\alias{cddar}
\alias{cdddar}
\alias{cddddr}
\alias{cdddr}
\alias{cddr}
\alias{cdr}
\alias{first}
\alias{last}
\alias{list-access}
\title{List/vector access functions}
\usage{
car(x)

cdr(x)

last(x)

first(x)

caar(x)

cadr(x)

cdar(x)

cddr(x)

caaar(x)

caadr(x)

cadar(x)

caddr(x)

cdaar(x)

cdadr(x)

cddar(x)

cdddr(x)

caaaar(x)

caaadr(x)

caadar(x)

caaddr(x)

cadaar(x)

cadadr(x)

caddar(x)

cadddr(x)

cdaaar(x)

cdaadr(x)

cdadar(x)

cdaddr(x)

cddaar(x)

cddadr(x)

cdddar(x)

cddddr(x)
}
\arguments{
\item{x}{The object whose elements or subsequences to access.}
}
\value{
A particular element or subsequence.
}
\description{
These functions are accessors for various elements and subsequences of lists
and vectors. They are written in a type-generic way and will work for any
broadly defined sequence type: vectors, lists (aka "generic vectors") and
pairlists.
}
\details{
Using "sequence" to mean list, other vector or pairlist, the basic functions
here are
\itemize{
\item{car, which returns the first element of a sequence (car(x) is
equivalent to x[[1]] for (pair)lists and to x[1] for vectors)}
\item{cdr, which returns the sequence consisting of every element but
the first, or NULL for a sequence of length 0 or length 1}
\item{last, which returns the last element of a sequence}
\item{first, which is an alias for car}
}

There are also a large number of functions of the form cXXXXr, where there
are two, three or four "a"'s or "d"'s between the c and r. These functions
are compositions of car and cdr: to give one example, \code{caadr(x)} is
equivalent to car(car(cdr(x))). All such functions with up to four letters
between the c and the r are pre-defined here.
}

