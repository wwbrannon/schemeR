% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/basic.R
\docType{data}
\name{basic-aliases}
\alias{basic-aliases}
\alias{begin}
\alias{display}
\alias{fromPkg}
\alias{is.boolean}
\alias{is.nil}
\alias{is.procedure}
\alias{nil}
\alias{progn}
\title{Lisp-friendly basic aliases}
\usage{
display(x, ...)

progn(...)

begin(...)

fromPkg(pkg, name)

is.nil(x)

is.procedure(x)

is.boolean(x)

nil
}
\arguments{
\item{x}{An object.}

\item{...}{Further arguments to pass to aliased base R functions.}

\item{pkg}{The package fromPkg should look in.}

\item{name}{The name of the object fromPkg should look for.}
}
\value{
Return values are as for the aliased base functions.
}
\description{
These functions and other objects make things that are already available
in base R available under their traditional names in Scheme and other Lisp
dialects., and in some cases provide syntactic names for R operators that
would otherwise have to be backtick-quoted. See 'Details' for a full list.
}
\details{
The aliases defined are:
\itemize{
\item{\code{display} is an alias for \code{print}}
\item{\code{progn} is an alias for \code{\{}}
\item{\code{begin} is an alias for \code{\{}}
\item{\code{fromPkg} is an alias for \code{::}}
\item{\code{is.nil} is an alias for \code{is.null}}
\item{\code{is.procedure} is an alias for \code{is.function}}
\item{\code{is.boolean} is an alias for \code{is.logical}}
\item{\code{nil} is an alias for \code{NULL}}
}

See the respective help pages for the base names for more details.
}
\keyword{datasets}

